//先通过这个user+token去缓存里面get，如果拿到了证明登录了，如果没拿到，证明没登录，或不是当前用户。
//如果拿到了的话，再把这个用户存到SecurityContextHolder，然后再去进入登录或者注册。
//这样在登录时候，就能判断是否存在重复登录的情况。
//关于查询发起请求的当前用户的问题，这里采用放在Header中，传递用户名信息。这样方便拿，但是这样做可能不太好。

//被注解标记的方法 所在的controller
Object target = joinPoint.getTarget();
//被注解标记的方法签名(被代理)
MethodSignature methodSignature = (MethodSignature) joinPoint.getSignature();
//注解标记的方法名
String methodName = joinPoint.getSignature().getName();
//被注解标记的Method对象
Method method = methodSignature.getMethod();
//方法上标记的注解
Authentication authentication = method.getAnnotation(Authentication.class);
if (authentication != null) {
    Role value = authentication.value();
    value.getRole();
}
//springMVC自动配置文档
https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-auto-configuration